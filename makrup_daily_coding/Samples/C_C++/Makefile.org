
currdir=$(shell pwd)
target=sample
cppsrcs=$(wildcard *.cpp)
csrcs=$(wildcard *.c)
headers=$(wildcard *.h)
objs=$(patsubst %.cpp,%.cpp.o,$(cppsrcs))
objs+=$(patsubst %.c,%.c.o,$(csrcs))
defs=$(patsubst %.cpp,%.cpp.d,$(cppsrcs))
defs+=$(patsubst %.c,%.c.d,$(csrcs))
macros=$(patsubst %.cpp,%.cpp.m,$(cppscs))
macros+=$(patsubst %.c,%.c.m,$(csrcs))

CFLAGS=-Wall --save-temp -I$(currdir)
CFLAGS+=-g -finstrument-functions 

CXXFLAGS=-Wall --save-temp -I$(currdir)
CXXFLAGS+=-g -finstrument-functions 

LDFLAGS=

LIBS=-lpthread

.SUFFIXES: 

all: $(target)

.PHONY: $(target)
$(target): $(defs) $(macros) $(objs)
	$(CXX) $(LDFLAGS) -o $@ $(objs) $(LIBS)

%.cpp.o: %.cpp %.h
	$(CXX) $(CXXFLAGS) -o $@ -c $<

%.cpp.d: %.cpp %.h
	$(CXX) -E -dD $(CXXFLAGS) $< > $@

%.cpp.m: %.cpp %.h
	$(CXX) -E -dM $(CXXFLAGS) $< > $@

%.c.o: %.c %.h
	$(CC) $(CFLAGS) -o $@ -c $<

%.c.d: %.c %.h
	$(CC) -E -dD $(CFLAGS) $< > $@

%.c.m: %.c %.h
	$(CC) -E -dM $(CFLAGS) $< > $@

clean: 
	rm -rf $(target)
	rm -rf *.[oidsm]
	rm -rf *.ii

